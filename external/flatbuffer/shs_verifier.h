#ifndef SHS_VERIFIER_H
#define SHS_VERIFIER_H

/* Generated by flatcc 0.6.2 FlatBuffers schema compiler for C by dvide.com */

#ifndef SHS_READER_H
#include "shs_reader.h"
#endif
#include "flatcc/flatcc_verifier.h"
#include "flatcc/flatcc_prologue.h"

static int fb_file_table_fileEntry_verify_table(flatcc_table_verifier_descriptor_t *td);
static int fb_file_table_thombStone_verify_table(flatcc_table_verifier_descriptor_t *td);
static int fb_file_table_BinaryFileTable_verify_table(flatcc_table_verifier_descriptor_t *td);

static int fb_file_table_Any_union_verifier(flatcc_union_verifier_descriptor_t *ud)
{
    switch (ud->type) {
    case 1: return flatcc_verify_union_table(ud, fb_file_table_fileEntry_verify_table); /* fileEntry */
    case 2: return flatcc_verify_union_table(ud, fb_file_table_thombStone_verify_table); /* thombStone */
    default: return flatcc_verify_ok;
    }
}

static int fb_file_table_fileEntry_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_string_field(td, 0, 0) /* name */)) return ret;
    if ((ret = flatcc_verify_field(td, 1, 8, 8) /* offset */)) return ret;
    if ((ret = flatcc_verify_field(td, 2, 8, 8) /* size */)) return ret;
    return flatcc_verify_ok;
}

static inline int fb_file_table_fileEntry_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fb_file_table_fileEntry_identifier, &fb_file_table_fileEntry_verify_table);
}

static inline int fb_file_table_fileEntry_verify_as_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, fb_file_table_fileEntry_identifier, &fb_file_table_fileEntry_verify_table);
}

static inline int fb_file_table_fileEntry_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fb_file_table_fileEntry_type_identifier, &fb_file_table_fileEntry_verify_table);
}

static inline int fb_file_table_fileEntry_verify_as_typed_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, fb_file_table_fileEntry_type_identifier, &fb_file_table_fileEntry_verify_table);
}

static inline int fb_file_table_fileEntry_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &fb_file_table_fileEntry_verify_table);
}

static inline int fb_file_table_fileEntry_verify_as_root_with_identifier_and_size(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, fid, &fb_file_table_fileEntry_verify_table);
}

static inline int fb_file_table_fileEntry_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &fb_file_table_fileEntry_verify_table);
}

static inline int fb_file_table_fileEntry_verify_as_root_with_type_hash_and_size(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root_with_size(buf, bufsiz, thash, &fb_file_table_fileEntry_verify_table);
}

static int fb_file_table_thombStone_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_field(td, 0, 8, 8) /* value */)) return ret;
    return flatcc_verify_ok;
}

static inline int fb_file_table_thombStone_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fb_file_table_thombStone_identifier, &fb_file_table_thombStone_verify_table);
}

static inline int fb_file_table_thombStone_verify_as_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, fb_file_table_thombStone_identifier, &fb_file_table_thombStone_verify_table);
}

static inline int fb_file_table_thombStone_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fb_file_table_thombStone_type_identifier, &fb_file_table_thombStone_verify_table);
}

static inline int fb_file_table_thombStone_verify_as_typed_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, fb_file_table_thombStone_type_identifier, &fb_file_table_thombStone_verify_table);
}

static inline int fb_file_table_thombStone_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &fb_file_table_thombStone_verify_table);
}

static inline int fb_file_table_thombStone_verify_as_root_with_identifier_and_size(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, fid, &fb_file_table_thombStone_verify_table);
}

static inline int fb_file_table_thombStone_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &fb_file_table_thombStone_verify_table);
}

static inline int fb_file_table_thombStone_verify_as_root_with_type_hash_and_size(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root_with_size(buf, bufsiz, thash, &fb_file_table_thombStone_verify_table);
}

static int fb_file_table_BinaryFileTable_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_union_vector_field(td, 1, 0, &fb_file_table_Any_union_verifier) /* fileTable */)) return ret;
    return flatcc_verify_ok;
}

static inline int fb_file_table_BinaryFileTable_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fb_file_table_BinaryFileTable_identifier, &fb_file_table_BinaryFileTable_verify_table);
}

static inline int fb_file_table_BinaryFileTable_verify_as_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, fb_file_table_BinaryFileTable_identifier, &fb_file_table_BinaryFileTable_verify_table);
}

static inline int fb_file_table_BinaryFileTable_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fb_file_table_BinaryFileTable_type_identifier, &fb_file_table_BinaryFileTable_verify_table);
}

static inline int fb_file_table_BinaryFileTable_verify_as_typed_root_with_size(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, fb_file_table_BinaryFileTable_type_identifier, &fb_file_table_BinaryFileTable_verify_table);
}

static inline int fb_file_table_BinaryFileTable_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &fb_file_table_BinaryFileTable_verify_table);
}

static inline int fb_file_table_BinaryFileTable_verify_as_root_with_identifier_and_size(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root_with_size(buf, bufsiz, fid, &fb_file_table_BinaryFileTable_verify_table);
}

static inline int fb_file_table_BinaryFileTable_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &fb_file_table_BinaryFileTable_verify_table);
}

static inline int fb_file_table_BinaryFileTable_verify_as_root_with_type_hash_and_size(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root_with_size(buf, bufsiz, thash, &fb_file_table_BinaryFileTable_verify_table);
}

#include "flatcc/flatcc_epilogue.h"
#endif /* SHS_VERIFIER_H */
